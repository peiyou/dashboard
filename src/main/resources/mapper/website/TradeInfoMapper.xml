<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.btcc.web.report.website.mapper.TradeInfoMapper">
    <select id="getTradeBtcTotal" resultType="java.math.BigDecimal" parameterType="java.util.Map">
        select
          sum(amount) as amount
        from
          trade
        where
            dateline >= unix_timestamp(#{startDate})- 8 * 3600
            and dateline &lt; unix_timestamp(#{endDate})- 8 * 3600
            and transaction_id_buyer > 0
            and transaction_id_seller > 0
            and taker_order_id > 0
            and user_id not in (
              ${company}
            )
    </select>


    <select id="getTradeBtcOfCnyTotal" resultType="java.math.BigDecimal" parameterType="java.util.Map">
        select
          sum(case when type='buybtc' then -cny else cny end) as cny
        from
        `transaction`
        where
            dateline >= unix_timestamp(#{startDate})- 8 * 3600
            and dateline &lt; unix_timestamp(#{endDate})- 8 * 3600
            and type in ('buybtc')
            and market = 'cnybtc'
            and user_id not in (
              ${company}
            )
    </select>

    <select id="getTradeBtcOfUserTotal" resultType="java.lang.Integer" parameterType="java.util.Map">
        select
          count(distinct user_id) as userIdTotal
        from
          `transaction`
        where
            dateline >= unix_timestamp(#{startDate})- 8 * 3600
            and dateline &lt; unix_timestamp(#{endDate})- 8 * 3600
            and type in ('buybtc','sellbtc')
            and market='cnybtc'
            and user_id not in(
              ${company}
            )
    </select>

    <select id="getTradeBtcAvgDailyUser" resultType="java.lang.Integer" parameterType="java.util.Map">
        select
            sum(userIds) / 7 as avgUser
        from
        (
        select
            count(distinct user_id) as userIds,
            from_unixtime(dateline + 8*3600,'%Y-%m-%d') as `date`
        from
           `transaction`
        where
            dateline >= unix_timestamp(#{startDate}) - 8*3600
            and dateline &lt; unix_timestamp(#{endDate}) - 8*3600
            and type in ('buybtc','sellbtc')
            and market = 'cnybtc'
            and user_id not in (
              ${company}
            )
        group by `date`
        ) t

    </select>

    <select id="getMaxTradeBtcOfPrice" resultType="java.math.BigDecimal" parameterType="java.util.Map">
        select
          max(price) as maxBtcPrice
        from
          trade
        where
            dateline >= unix_timestamp(#{startDate}) - 8*3600
            and dateline &lt; unix_timestamp(#{endDate})- 8*3600
    </select>

    <select id="getMinTradeBtcOfPrice" resultType="java.math.BigDecimal" parameterType="java.util.Map">
        select
        min(price) as minBtcPrice
        from
        trade
        where
        dateline >= unix_timestamp(#{startDate}) - 8*3600
        and dateline &lt; unix_timestamp(#{endDate})- 8*3600
    </select>

    <select id="getLastTradeBtcPrice" resultType="java.math.BigDecimal" parameterType="java.util.Map">
        select
          price
        from
          trade t inner join
        (
        select
            max(trade_id) as trade_id
        from
            trade

        ) t1
        on t.trade_id = t1.trade_id
    </select>

    <select id="getLastTradeLtcPrice" resultType="java.math.BigDecimal" parameterType="java.util.Map">
        select
            price
        from
            trade_cnyltc t inner join
            (
                select
                    max(trade_id) as trade_id
                from
                    trade_cnyltc
            ) t1
        on t.trade_id = t1.trade_id
    </select>

    <select id="getCnyBtcMarketFreeCny" resultType="java.util.Map" parameterType="java.util.Map">
        select
            user_id,
            sum(cny) as cny
        from
            (select
               user_id,
               (case when type = 'bid' then (amount) * price else (amount) * #{btcPrice} end ) as cny
            from
               `order`
            where
               cancelled = 0 and amount > 0 order by cny ) t
        group by user_id order by cny
    </select>

    <select id="getCnyLtcMarketFreeCny" resultType="java.util.Map" parameterType="java.util.Map">
        select
            user_id,
            sum(cny) as cny
        from
            (select
                    user_id,
                    (case when type = 'bid' then (amount) * price else (amount) * #{ltcPrice} end ) as cny
            from
                    `order_cnyltc`
            where
                    cancelled = 0 and amount > 0 order by cny ) t
        group by user_id order by cny
    </select>

    <select id="getBtcLtcMarketFreeCny" resultType="java.util.Map" parameterType="java.util.Map">
        select
            user_id,
            sum(cny) as cny
        from
            (select
                    user_id,
                    (case when type = 'bid' then (amount) * price * #{btcPrice} else (amount) * #{ltcPrice} end ) as cny
            from
                    `order_btcltc`
            where
                    cancelled = 0 and amount > 0 order by cny ) t
        group by user_id order by cny
    </select>

    <select id="getUserOfBalance" resultType="java.util.Map" parameterType="java.util.Map" resultOrdered="true" fetchSize="-2147483648">
        	select
                user_id,
                sum(cny) as cny
            from
                (
                select
                    t.user_id,
                    (btc * #{btcPrice}) + (cny) + (ltc * #{ltcPrice}) as cny
                from
                        `user` t
                 where t.user_id &lt;= 948132

               union all

               select
                    user_id,
                    sum(amount * #{btcPrice}) as cny
                from
                    withdrawbtc
                where
                    status = 'pending'
                    and user_id &lt;= 948132
                group by user_id

                union all

               select
                    user_id,
                    sum(amount * #{ltcPrice}) as cny
                from
                    withdrawltc
                where
                    status = 'pending'
                    and user_id &lt;= 948132
                group by user_id

                union all

               select
                    user_id,
                    sum(amount) as cny
                from
                    withdrawcny
                where
                    status = 'pending'
                    and user_id &lt;= 948132
                group by user_id ) t group by user_id order by cny
    </select>
</mapper>
