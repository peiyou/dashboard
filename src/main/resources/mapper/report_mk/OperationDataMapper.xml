<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.btcc.web.report.mk.mapper.OperationDataMapper">
    <select id="queryDepositBtcInfo" parameterType="java.util.Map" resultType="java.util.Map">
        select
            from_unixtime(dateline,'%Y-%m-%d') as `date`,
            count(*) as deposit_num,
            sum(amount) as deposit_total,
            count(distinct user_id) as deposit_user_num
        from
            (
            SELECT
                dateline,
                amount,
                user_id
            FROM blockchain_txn
                WHERE dateline >= UNIX_TIMESTAMP(#{startDate}) and dateline &lt; UNIX_TIMESTAMP(#{endDate}) AND invalid IS NULL AND currency_type = 'btc'
            union all

            SELECT
                dateline,
                btc,
                user_id
            FROM `transaction`
                WHERE dateline >= UNIX_TIMESTAMP(#{startDate}) and dateline &lt; UNIX_TIMESTAMP(#{endDate})  AND type = 'fundbtc' and data3 = 'wallet'
            ) t group by date
    </select>

    <select id="queryWithdrawBtcInfo" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            from_unixtime(dateline, '%Y-%m-%d') as `date`,
            count(*) as withdraw_btc_num,
            sum(amount) as withdraw_btc_total,
            sum(payfee) as withdraw_btc_fee,
            count(DISTINCT user_id) as withdraw_btc_user_num
        FROM withdrawbtc
            WHERE dateline >= UNIX_TIMESTAMP(#{startDate}) and dateline &lt; UNIX_TIMESTAMP(#{endDate}) AND status = 'success'
        GROUP BY date

    </select>

    <select id="queryDepositCnyInfo" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            from_unixtime(dateline, '%Y-%m-%d') as `date`,
            count(*) as deposit_cny_num,
            sum(amount) as deposit_cny_total,
            count(DISTINCT user_id) as deposit_cny_user_num
        FROM fundcny
            WHERE dateline >= UNIX_TIMESTAMP(#{startDate}) and dateline &lt; UNIX_TIMESTAMP(#{endDate}) AND transaction_id > 0
            group by date
    </select>

    <select id="queryWithdrawCnyInfo" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
            from_unixtime(dateline, '%Y-%m-%d') as `date`,
            count(*) as withdraw_cny_num,
            sum(amount) as withdraw_cny_total,
            sum(handling) as withdraw_cny_fee,
            count(DISTINCT user_id) as withdraw_cny_user_num
        FROM withdrawcny
            WHERE dateline >= UNIX_TIMESTAMP(#{startDate}) and dateline &lt; UNIX_TIMESTAMP(#{endDate}) AND status = 'success'
            GROUP  BY  date
    </select>

    <select id="queryTradeInfo" parameterType="java.util.Map" resultType="java.util.Map">
        select
            t.date,
            t.btcUserNum as trade_btc_user_num,
            t.btc/2 as trade_btc_total,
            t1.ltcUserNum as trade_ltc_user_num,
            t1.ltc/2 as trade_ltc_total
        from
            (select
                from_unixtime(dateline,'%Y-%m-%d') as `date`,
                count(distinct user_id) as btcUserNum,
                sum(case when `type` = 'buybtc' then btc when `type`= 'sellbtc' then -btc else 0 end) as btc
            from
                `transaction`
            where
                `type` in ('buybtc','sellbtc')
                and market = 'cnybtc'
                and dateline >= UNIX_TIMESTAMP(#{startDate}) and dateline &lt; UNIX_TIMESTAMP(#{endDate})
            group by `date`) t
            left join
            (select
                from_unixtime(dateline,'%Y-%m-%d') as `date`,
                count(distinct user_id) as ltcUserNum,
                sum(case when `type` = 'buyltc' then ltc when `type`= 'sellltc' then -ltc else 0 end) as ltc
            from
                `transaction`
            where
                `type` in ('buyltc','sellltc')
                and market = 'cnyltc'
                and dateline >= UNIX_TIMESTAMP(#{startDate}) and dateline &lt; UNIX_TIMESTAMP(#{endDate})
            group by `date`) t1 on t.date = t1.date
    </select>

    <select id="queryTradeFeeInfo" parameterType="java.util.Map" resultType="java.util.Map">
        select
            FROM_UNIXTIME(dateline, '%Y-%m-%d') AS `date`,
            sum(btc) as btc,
            sum(cny) as cny,
            sum(ltc) as ltc,
            market
        from `transaction`
        where
            user_id = 780284 and dateline >= UNIX_TIMESTAMP(#{startDate}) and dateline &lt; UNIX_TIMESTAMP(#{endDate})
            and type in ('tradefee')
            and market in ('cnybtc','cnyltc')
        group by date,market
    </select>

    <select id="queryRegTimeDepositOfUserNum" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT
            count(distinct user_id) as register_time_deposit_of_user_num
        FROM `transaction`
        WHERE user_id >= #{minUserId} and user_id &lt;= #{maxUserId}
        and dateline >= UNIX_TIMESTAMP(#{startDate}) AND dateline &lt; UNIX_TIMESTAMP(#{endDate})
        and type IN ('fundbtc', 'fundltc', 'fundmoney')
    </select>
</mapper>